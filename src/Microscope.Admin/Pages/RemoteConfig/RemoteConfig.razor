@using Microsoft.AspNetCore.Authorization
@using MCSPRemoteConfig = Microscope.Domain.Entities.RemoteConfig;
@attribute [Authorize]
@page "/remoteconfig"


<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Remote Config</MudText>

<MudButton Variant="Variant.Filled" OnClick="OpenCreateDialog" Color="Color.Primary">NEW</MudButton>

<MudTable Class="mt-2" Items="@RemoteConfigs" Filter="new Func<MCSPRemoteConfig,bool>(FilterFunc)">
  <ToolBarContent>
    <MudText Typo="Typo.h6">Remote Config</MudText>
    <MudToolBarSpacer />
    <MudTextField @bind-Value="SearchTerm" Placeholder="Search" Adornment="Adornment.Start"
      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
  </ToolBarContent>
  <HeaderContent>
    <MudTh>Key</MudTh>
    <MudTh>Dimension</MudTh>
    <MudTh></MudTh>
  </HeaderContent>
  <RowTemplate>
    <MudTd DataLabel="Id">@context.Key</MudTd>
    <MudTd DataLabel="Dimension">@context.Dimension</MudTd>
    <MudTd DataLabel="Actions"  Style="text-align:right">
      <MudIconButton @onclick="() => Delete(context)"  title="Delete" Icon="@Icons.Material.Filled.Delete" Color="Color.Error"></MudIconButton>
      <MudIconButton @onclick="() => OnSelectItem(context)"  title="Edit" Icon="@Icons.Material.Filled.Edit"></MudIconButton>
    </MudTd>
  </RowTemplate>
</MudTable>

@* <div class="container">

  <div class="row">
    <div class="col-11">
      <input class="form-control" type="text" placeholder="Search" @bind="@SearchTerm" @bind:event="oninput">
    </div>
    <div class="col-1">
      <button @onclick="OpenCreate" class="btn btn-success btn-block" data-toggle="modal" data-target="#remoteconfigModal">NEW</button>
    </div>
  </div>

  <br>

  <table class="table table-striped table-hover">
    <thead>
      <tr>
        <th scope="col">Key</th>
        <th scope="col">Dimension</th>
        <th scope="col"></th>
      </tr>
    </thead>
    <tbody>
      @if (RemoteConfigs.Count() > 0)
      {
          @foreach (var item in RemoteConfigs.Where(x => x.Key.Contains(SearchTerm, StringComparison.CurrentCultureIgnoreCase)))
          {
            <tr>
              <td title="@item.Id">@item.Key</td>
              <td>@item.Dimension</td>
              <td>
                  <button @onclick="() => Delete(item)" title="Delete" class="btn btn-sm btn-danger float-right mx-1"><i class="fas fa-trash"></i></button>
                  <button @onclick="() => OnSelectItem(item)" title="Edit" class="btn btn-sm btn-warning float-right mx-1" data-toggle="modal" data-target="#remoteconfigModal"><i class="fas fa-edit"></i></button>
              </td>
            </tr>
          }
      }
    </tbody>
  </table>
</div>

<div class="modal fade" id="remoteconfigModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">RemoteConfigs</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>

      <div class="modal-body">
        <EditForm Model="@SelectedItem" OnValidSubmit="@HandleFormSubmit">
          <DataAnnotationsValidator />
          <ValidationSummary />

          <div class="form-group">
            <label for="name">Key</label>
            <InputText class="form-control" id="name" @bind-Value="SelectedItem.Key" />
          </div>

          <div class="form-group">
            <label for="name">Dimension</label>
            <InputText class="form-control" id="name" @bind-Value="SelectedItem.Dimension" />
          </div>

          <button class="btn btn-primary" type="submit">SAVE</button>
        </EditForm>
      </div>
    </div>
  </div>
</div> *@