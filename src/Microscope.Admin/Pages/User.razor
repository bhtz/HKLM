@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.WebAssembly.Http
@using System.Net.Http.Headers
@inject HttpClient Http
@inject IAccessTokenProvider TokenProvider
@page "/user"

<AuthorizeView>
    <Authorized>
        @context.User.Identity.Name

        <s>@AccessToken</s>
        
        <ul>
          @foreach (var item in context.User.Claims)
          {
            <li>@item.Type - @item.Value</li>
          }
        </ul>

        <button type="button" class="btn btn-success" @onclick="OnClickBtn">CALL</button>
    </Authorized>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>

@code {

    public string AccessToken { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var accessTokenResult = await TokenProvider.RequestAccessToken();
        AccessToken = string.Empty;

        if (accessTokenResult.TryGetToken(out var token))
        {
            AccessToken = token.Value;
        }
    }

    private async void OnClickBtn() 
    {
        try
        {
            Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", AccessToken);
            var result = await Http.GetFromJsonAsync<object>("WeatherForecast");
            Console.WriteLine(result);
        }
        catch (AccessTokenNotAvailableException exception)
        {
            Console.WriteLine(exception);
            exception.Redirect();
        }
    }
}